package org.dhruv;

public class SynchronizedConcept {
	public static void main(String args[])
	{
		Account a = new Account(50);
		Thread t1 = new Thread(a,"Dhruv");
		Thread t2 = new Thread(a,"Aneri");
		t1.start();
		t2.start();
	}
	
	
}

class Account implements Runnable
{
	private int balance;
	Account(int amount)
	{
		this.balance = amount;
	}
	
	int getBalance()
	{
		System.out.println("Balance : "+this.balance+" : "+Thread.currentThread().getName());
		return this.balance;
	}
	
	void debit(int amount)
	{
		this.balance = this.balance - amount;
		System.out.println("Debited by : "+Thread.currentThread().getName());
	}
	public void run()
	{
		for(int i = 0;i < 4;i++)
		{
			if(this.getBalance() > 0)
			{
				this.debit(10);
				try {
					Thread.sleep(1000l);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			else
				System.out.println("Account is Overdrawn : "+Thread.currentThread().getName());
		}
	}
	
}